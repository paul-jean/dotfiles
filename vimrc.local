set nowrap

" keyboard shortcuts
" inoremap jj <ESC>

" Reduce the delay when hitting ESC
" http://www.johnhawthorn.com/2012/09/vi-escape-delays/
" set ttimeout
 set timeoutlen=1000
 set ttimeoutlen=0
" NOTE: this doesn't reduce the timeout under tmux, so use a tmux setting
" instead:
" http://superuser.com/questions/252214/slight-delay-when-switching-modes-in-vim-using-tmux-or-screen

" highlight search
set hlsearch
"nmap <leader>hl :let @/ = ""<CR>

" gui settings
if (&t_Co == 256 || has('gui_running'))
  if ($TERM_PROGRAM == 'iTerm.app')
    colorscheme solarized
  else
    colorscheme desert
  endif
endif

" Disambiguate ,a & ,t from the Align plugin, making them fast again.
"
" This section is here to prevent AlignMaps from adding a bunch of mappings
" that interfere with the very-common ,a and ,t mappings. This will get run
" at every startup to remove the AlignMaps for the *next* vim startup.
"
" If you do want the AlignMaps mappings, remove this section, remove
" ~/.vim/bundle/Align, and re-run rake in maximum-awesome.
function! s:RemoveConflictingAlignMaps()
  if exists("g:loaded_AlignMapsPlugin")
    AlignMapsClean
  endif
endfunction
command! -nargs=0 RemoveConflictingAlignMaps call s:RemoveConflictingAlignMaps()
silent! autocmd VimEnter * RemoveConflictingAlignMaps

" Don't use unnamed clipboard if inside tmux:
" http://stackoverflow.com/questions/11404800/fix-vim-tmux-yank-paste-on-unnamed-register
if $TMUX == ''
    set clipboard+=unnamed
endif

autocmd Filetype clojure RainbowParenthesesActivate
autocmd Filetype clojure RainbowParenthesesLoadRound
autocmd Filetype clojure RainbowParenthesesLoadSquare
autocmd Filetype clojure RainbowParenthesesLoadBraces

" http://www.deepbluelambda.org/programming/clojure/programming-clojure-with-vim-2013-edition
let g:rbpt_colorpairs = [
  \ [ '13', '#6c71c4'],
  \ [ '5',  '#d33682'],
  \ [ '1',  '#dc322f'],
  \ [ '9',  '#cb4b16'],
  \ [ '3',  '#b58900'],
  \ [ '2',  '#859900'],
  \ [ '6',  '#2aa198'],
  \ [ '4',  '#268bd2'],
  \ ]

" Enable rainbow parentheses for all buffers
augroup rainbow_parentheses
  au!
  au VimEnter * RainbowParenthesesActivate
  au BufEnter * RainbowParenthesesLoadRound
  au BufEnter * RainbowParenthesesLoadSquare
  au BufEnter * RainbowParenthesesLoadBraces
augroup END

" http://vim.wikia.com/wiki/Highlight_unwanted_spaces
set listchars=tab:▸\ ,trail:▫
syntax clear SpecialKey
hi SpecialKey ctermfg=11 ctermbg=8

" http://tedlogan.com/techblog3.html
" Number of columns to insert when hitting tab:
set softtabstop=4
" Number of columns to indent:
set shiftwidth=4
" Expand tabs to spaces:
set expandtab
" Number of columns per tab character if they appear in the file:
set tabstop=4


" highlight the current line
" http://vim.wikia.com/wiki/Highlight_current_line
set cursorline
" highlight the current column
set cursorcolumn

set noswapfile

" Set default text width to 80.
setl tw=80

" https://github.com/hallettj/jslint.vim/issues/38
hi clear SpellBad
hi SpellBad cterm=underline

" Disable whitespace warnings in vim airline
" https://github.com/bling/vim-airline/blob/master/doc/airline.txt
let g:airline#extensions#whitespace#enabled = 0
let g:airline_section_b = '%{getcwd()}'
let g:airline_section_c = '%t'
let g:airline_section_warning = ''

" airline fonts
let g:airline_powerline_fonts=1
let g:airline_theme='solarized'

" highlight search
set hlsearch
" leader + space to clear search highligh
nnoremap <leader><space> :nohlsearch<CR>

" For solarized plugin (color scheme)
" https://github.com/altercation/vim-colors-solarized
syntax enable
set background=dark
colorscheme solarized

set tags=tags;
" not compatible with fzf:
" https://www.reddit.com/r/neovim/comments/4r8kfh/help_with_fzf_changing_directory/
"set autochdir

" SOX label on status line:
" https://github.etsycorp.com/Engineering/vim-rodeo
set statusline+=%#warningmsg#
set statusline+=\ %{rodeo#statusline()}
set statusline+=%*

autocmd BufWritePost /**/deployinator/* :silent !touch /usr/etsy/deployinator/tmp/restart.txt

set mouse-=a

" leader + n to jump to file in nerdtree
" http://stackoverflow.com/questions/7692233/nerdtree-reveal-file-in-tree
nmap <leader>n :NERDTreeFind<CR>

" let g:hound_base_url = \"http://hound.etsycorp.com\"
" nnoremap <leader>a :HoundQF<space>
" vnoremap <leader>a y:HoundQF<space><C-R>"<CR>
" nnoremap <LEADER>c :cclose<cr>
" nnoremap <LEADER>o :copen<cr>

" this is causing the control key alone to search for stuff under the cursor:
" nnoremap <C-[> :Ag <cword> ~/development/Etsyweb/<CR>

" https://github.etsycorp.com/tschneiter/vim-github
" Link to file in github with lines hilighted
map <leader>g :Github l<CR>

" try to improve scroll performance:
" https://stackoverflow.com/questions/307148/vim-scrolling-slowly
set ttyfast
set lazyredraw

set relativenumber

" fix indent guides error for js files
" https://github.com/nathanaelkane/vim-indent-guides/issues/108
let g:indent_guides_auto_colors = 0
hi IndentGuidesOdd  guibg=red   ctermbg=3
hi IndentGuidesEven guibg=green ctermbg=4

" allow gf to jump to symbols in etsyweb
set path+=~/development/Etsyweb,
            \~/development/Etsyweb/phplib/EtsyModel,
            \~/development/Etsyweb/phplib,
            \~/development/Etsyweb/templates,
            \~/development/Etsyweb/htdocs/assets/js,
            \~/development/Etsyweb/htdocs/assets/css,
            \~/development/Etsyweb/phplib/Api,
            \~/development/Etsyweb/phplib/Api/Resource
set includeexpr=substitute(v:fname,'_','/','g').'.php'
set suffixesadd+=.tpl
set suffixesadd+=.js
set suffixesadd+=.jsx
set suffixesadd+=.mustache

" enable fzf
set rtp+=~/.fzf
Plugin 'junegunn/fzf.vim'
" fzf shortcut
" Use the correct file source, based on context
function! ContextualFZF()
    " Determine if inside a git repo
    silent exec "!git rev-parse --show-toplevel"
    redraw!

    if v:shell_error
        " Search in current directory
        call fzf#run({
          \'sink': 'e',
          \'down': '40%',
        \})
    else
        " Search in entire git repo
        call fzf#run({
          \'sink': 'e',
          \'down': '40%',
          \'source': 'git ls-tree --full-tree --name-only -r HEAD',
        \})
    endif
endfunction
"map <C-p> :call ContextualFZF()<CR>
nnoremap <leader>t :call ContextualFZF()<CR>
" This is the default extra key bindings
let g:fzf_action = {
  \ 'ctrl-t': 'tab split',
  \ 'ctrl-x': 'split',
  \ 'ctrl-v': 'vsplit' }


" CtrlP mru first
nnoremap <leader>b :CtrlPMRU<CR>

" most recent files from fzf
nnoremap <leader>r :FilesMru --tiebreak=end<cr>

" turn off slowest php regex matchers:
" https://github.com/StanAngeloff/php.vim/blob/7147336c05a853777befff35ad1737114b5fde86/README.md#configuration
" https://github.com/StanAngeloff/php.vim/issues/68
" set g:php_syntax_extensions_enabled=[]
